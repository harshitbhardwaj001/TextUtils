{"version":3,"sources":["Components/Navbar.js","Components/TextForm.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","about","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","heading","style","backgroundColor","value","onChange","event","console","log","target","rows","newText","toUpperCase","showAlert","toLowerCase","split","length","Alert","alert","class","role","word","lower","charAt","slice","capitalize","msg","defaultProps","App","setMode","setAlert","message","setTimeout","document","body","color","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.112513c9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <>\r\n      <nav\r\n        className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n      >\r\n        <div className=\"container-fluid\">\r\n          {/* <Link className=\"navbar-brand\" to=\"/\">\r\n            {props.title}\r\n          </Link> */}\r\n          <a className=\"navbar-brand\" href=\"/\">\r\n            {props.title}\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\r\n                  Home\r\n                </Link> */}\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                  Home\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                {/* <Link className=\"nav-link\" to=\"/about\">\r\n                  {props.about}\r\n                </Link> */}\r\n                <a className=\"nav-link\" href=\"#\">\r\n                  {props.about}\r\n                </a>\r\n              </li>\r\n            </ul>\r\n            {/* <form className=\"d-flex\">\r\n              <input\r\n                className=\"form-control me-2\"\r\n                type=\"search\"\r\n                placeholder=\"Search\"\r\n                aria-label=\"Search\"\r\n              />\r\n              <button className=\"btn btn-outline-primary\" type=\"submit\">\r\n                Search\r\n              </button>\r\n            </form> */}\r\n            <div className=\"form-check form-switch\">\r\n              <input\r\n                className=\"form-check-input\"\r\n                onClick={props.toggleMode}\r\n                type=\"checkbox\"\r\n                id=\"flexSwitchCheckDefault\"\r\n              />\r\n              <label className={`form-check-label text-${props.mode==='light'?'dark':'light'}`} htmlFor=\"flexSwitchCheckDefault\">\r\n                Enable Dark Mode\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  about: PropTypes.string,\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: \"Set Title Here\",\r\n  about: \"About Text Here\",\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpClick = () => {\r\n    let newText = text.toUpperCase();\r\n    console.log(\"You have clicked on handleUpClick\");\r\n    setText(newText);\r\n    props.showAlert(\"Converted to UpperCase!\", \"success\");\r\n  };\r\n  const handleLoClick = () => {\r\n    let newText = text.toLowerCase();\r\n    console.log(\"You have clicked on handleLoClick\");\r\n    setText(newText);\r\n    props.showAlert(\"Converted to LowerCase!\", \"success\");\r\n  };\r\n  const handleOnChange = (event) => {\r\n    console.log(\"On Change\");\r\n    setText(event.target.value);\r\n  };\r\n  const [text, setText] = useState('');\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            style={{backgroundColor: props.mode==='dark'?'#212529':'white'}}\r\n            value={text}\r\n            onChange={handleOnChange}\r\n            id=\"myBox\"\r\n            rows=\"8\"\r\n          ></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleUpClick}>\r\n          Convert To Uppercase\r\n        </button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleLoClick}>\r\n          Convert To Lowercase\r\n        </button>\r\n      </div>\r\n      <div className=\"container my-3\">\r\n          <h2>Your Text Summary</h2>\r\n          <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n          <p>{0.008 * text.split(\" \").length} minutes read.</p>\r\n          <h2>Preview</h2>\r\n          <p>{text}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Alert(props) {\r\n  const capitalize = (word)=>{\r\n    const lower= word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  }\r\n  return (\r\n      props.alert && <div class={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{capitalize(props.alert.type)}</strong> : {props.alert.msg}\r\n      </div>\r\n  );\r\n}\r\n","import \"./App.css\";\r\n// import About from \"./Components/About\";\r\nimport Navbar from \"./Components/Navbar\";\r\nimport TextForm from \"./Components/TextForm\";\r\nimport React, { useState } from \"react\";\r\nimport Alert from \"./Components/Alert\";\r\n\r\n// import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  const [mode, setMode] = useState(\"dark\"); // Whether dark mode is enabled or not\r\n  const [alert, setAlert] = useState(null);\r\n\r\n  const showAlert = (message, type) => {\r\n    setAlert({\r\n      msg: message,\r\n      type: type,\r\n    });\r\n    setTimeout(() => {\r\n      setAlert(null);\r\n    }, 2000);\r\n  };\r\n  const toggleMode = () => {\r\n    if (mode === \"light\") {\r\n      setMode(\"dark\");\r\n      document.body.style.backgroundColor = \"\";\r\n      document.body.style.color = \"#212529\";\r\n      showAlert(\"Light Mode has been enabled.\", \"success\");\r\n    } else {\r\n      setMode(\"light\");\r\n      document.body.style.backgroundColor = \"#212529\";\r\n      document.body.style.color = \"white\";\r\n      showAlert(\"Dark Mode has been enabled.\", \"success\");\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n        <Navbar\r\n          title=\"TextUtils\"\r\n          about=\"About\"\r\n          mode={mode}\r\n          toggleMode={toggleMode}\r\n        />\r\n        <Alert alert={alert} />\r\n\r\n        <div className=\"container my-3\">\r\n              <TextForm heading=\"Enter Your Text To Analyze Below\" showAlert={showAlert}/>\r\n        </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}